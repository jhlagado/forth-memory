
 WARM COLD 'BOOT EMPTY hi version VER SEE FORTH>NAME WORDS .ID ?CSP !CSP .FREE .BASE .S DUMP dm+ _TYPE CONSTANT VARIABLE CREATE USER : ] ; OVERT $COMPILE $,n ?UNIQUE $" RECURSE [COMPILE] ALLOT ' quit1 QUIT quitError que CONSOLE I/O HAND FILE XIO PRESET [ EVAL ?STACK .OK $INTERPRET ." ABORT" $," abort" ABORT NULL$ THROW CATCH QUERY EXPECT accept kTAP TAP ^H NAME? FORTHfind SAME? NAME> WORD TOKEN .( CTRL CHAR PARSE parse ."| $"| do$ CR PACE NUF? KEY ?KEY NUMBER? DIGIT? ? . U. U.R .R DECIMAL HEX str .$ TYPE SPACES CHARS SPACE EMIT #> SIGN #S # HOLD <# EXTRACT DIGIT PACK$ -TRAILING FILL CMOVE COUNT @EXECUTE TIB PAD 2@ 2! +! PICK DEPTH >CHAR CELLS CELL- */ */MOD M* * UM* / MOD /MOD M/MOD UM/MOD WITHIN MIN MAX < U< = 0= ABS - DNEGATE NEGATE INVERT D+ + 2DUP -ROT ROT ?DUP WHILE WHEN ELSE AFT THEN REPEAT AHEAD IF AGAIN UNTIL NEXT BEGIN FOR >RESOLVE >MARK <RESOLVE <MARK CREATE LITERAL COMPILE [COMPILE] , CELL+ HERE NIP \T \ ( IMMEDIATE COMPILE-ONLY setHeaderBits 2DROP LAST NP CP CURRENT CONTEXT HANDLER HLD 'NUMBER 'EVAL CSP #TIB >IN SPAN temp BASE 'PROMPT 'ECHO 'TAP 'EXPECT 'EMIT '?KEY RP0 SP0 ' ; : ] [ $INTERPRET $COMPILE NUMBER? TOKEN PARSE userAreaSave userAreaInit UM+ XOR OR AND 0< OVER SWAP DUP DROP SP! SP@ >R R@ R> RP! RP@ C! C@ @ ! branch ?branch next DOES> doLIT !IO TX! ?RX EXECUTE EXIT BYE MS TEST debugPrintTIB break testing3 debugNA >NAME $,n OVERT find ALIGNED tokenVar tokenUser tokenDoList tokenNextVal tokenVocabulary BL =BYTEMASK =IMED =COMP TIB0 CELLMASK CELLbits CELLL FORTH